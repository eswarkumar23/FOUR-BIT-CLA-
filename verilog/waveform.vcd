$date
	Wed Nov 20 17:32:43 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_four_bit_adder_cla $end
$var wire 4 ! sum_reg [3:0] $end
$var wire 4 " sum [3:0] $end
$var wire 1 # out_carry_reg $end
$var wire 1 $ out_carry $end
$var wire 1 % carry_reg $end
$var wire 4 & b_reg [3:0] $end
$var wire 4 ' a_reg [3:0] $end
$var reg 4 ( a [3:0] $end
$var reg 4 ) b [3:0] $end
$var reg 1 * carry $end
$var reg 1 + clk $end
$scope module A_reg $end
$var wire 1 + clk $end
$var wire 4 , d [3:0] $end
$var wire 4 - q [3:0] $end
$scope module FF0 $end
$var wire 1 + clk $end
$var wire 1 . d $end
$var reg 1 / q $end
$upscope $end
$scope module FF1 $end
$var wire 1 + clk $end
$var wire 1 0 d $end
$var reg 1 1 q $end
$upscope $end
$scope module FF2 $end
$var wire 1 + clk $end
$var wire 1 2 d $end
$var reg 1 3 q $end
$upscope $end
$scope module FF3 $end
$var wire 1 + clk $end
$var wire 1 4 d $end
$var reg 1 5 q $end
$upscope $end
$upscope $end
$scope module B_reg $end
$var wire 1 + clk $end
$var wire 4 6 d [3:0] $end
$var wire 4 7 q [3:0] $end
$scope module FF0 $end
$var wire 1 + clk $end
$var wire 1 8 d $end
$var reg 1 9 q $end
$upscope $end
$scope module FF1 $end
$var wire 1 + clk $end
$var wire 1 : d $end
$var reg 1 ; q $end
$upscope $end
$scope module FF2 $end
$var wire 1 + clk $end
$var wire 1 < d $end
$var reg 1 = q $end
$upscope $end
$scope module FF3 $end
$var wire 1 + clk $end
$var wire 1 > d $end
$var reg 1 ? q $end
$upscope $end
$upscope $end
$scope module COUT_reg $end
$var wire 1 + clk $end
$var wire 1 $ d $end
$var reg 1 # q $end
$upscope $end
$scope module C_reg $end
$var wire 1 + clk $end
$var wire 1 * d $end
$var reg 1 % q $end
$upscope $end
$scope module SUM_reg $end
$var wire 1 + clk $end
$var wire 4 @ q [3:0] $end
$var wire 4 A d [3:0] $end
$scope module FF0 $end
$var wire 1 + clk $end
$var wire 1 B d $end
$var reg 1 C q $end
$upscope $end
$scope module FF1 $end
$var wire 1 + clk $end
$var wire 1 D d $end
$var reg 1 E q $end
$upscope $end
$scope module FF2 $end
$var wire 1 + clk $end
$var wire 1 F d $end
$var reg 1 G q $end
$upscope $end
$scope module FF3 $end
$var wire 1 + clk $end
$var wire 1 H d $end
$var reg 1 I q $end
$upscope $end
$upscope $end
$scope module UUT $end
$var wire 4 J a [3:0] $end
$var wire 4 K b [3:0] $end
$var wire 1 L c0 $end
$var wire 1 M c1 $end
$var wire 1 N c2 $end
$var wire 1 % carry $end
$var wire 1 O carry_reg $end
$var wire 1 P g0 $end
$var wire 1 Q g1 $end
$var wire 1 R g2 $end
$var wire 1 S g3 $end
$var wire 1 T inter_c13 $end
$var wire 1 U inter_c26 $end
$var wire 1 V inter_c36 $end
$var wire 1 W inter_c37 $end
$var wire 1 X intermediate_c0 $end
$var wire 1 Y intermediate_c11 $end
$var wire 1 Z intermediate_c12 $end
$var wire 1 [ intermediate_c21 $end
$var wire 1 \ intermediate_c22 $end
$var wire 1 ] intermediate_c23 $end
$var wire 1 ^ intermediate_c24 $end
$var wire 1 _ intermediate_c31 $end
$var wire 1 ` intermediate_c32 $end
$var wire 1 a intermediate_c33 $end
$var wire 1 b intermediate_c34 $end
$var wire 1 c intermediate_c35 $end
$var wire 1 $ out_carry $end
$var wire 1 d p0 $end
$var wire 1 e p1 $end
$var wire 1 f p2 $end
$var wire 1 g p3 $end
$var wire 4 h sum [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx h
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
zO
xN
xM
xL
bx K
bx J
xI
xH
xG
xF
xE
xD
xC
xB
bx A
bx @
x?
0>
x=
0<
x;
0:
x9
08
bx 7
b0 6
x5
04
x3
02
x1
00
x/
0.
bx -
b0 ,
0+
0*
b0 )
b0 (
bx '
bx &
x%
x$
x#
bx "
bx !
$end
#5
0H
0F
0$
0D
0N
0W
0M
0U
0V
0L
0B
0T
0^
0c
0X
b0 "
b0 A
b0 h
0Y
0Z
0[
0\
0]
0_
0`
0a
0b
0d
0P
0e
0Q
0f
0R
0g
0S
0/
01
03
b0 '
b0 -
b0 J
05
09
0;
0=
b0 &
b0 7
b0 K
0?
0%
1+
#10
0+
#15
1D
b10 "
b10 A
b10 h
1L
1P
0#
0I
0G
0E
b0 !
b0 @
0C
b1 &
b1 7
b1 K
19
b1 '
b1 -
b1 J
1/
18
1.
1+
b1 )
b1 6
b1 (
b1 ,
#20
0+
#25
b10 !
b10 @
1E
1+
#30
1:
10
0+
1*
b11 )
b11 6
b11 (
b11 ,
#35
1F
1M
1T
1B
1Q
b111 "
b111 A
b111 h
1%
b11 &
b11 7
b11 K
1;
b11 '
b11 -
b11 J
11
1+
#40
0+
#45
1H
1N
0D
1U
1Z
0T
1^
1e
0Q
1R
0B
b1100 "
b1100 A
b1100 h
b111 '
b111 -
b111 J
13
0;
b101 &
b101 7
b101 K
1=
0%
1C
b111 !
b111 @
1G
0:
1<
12
1+
0*
b101 )
b101 6
b111 (
b111 ,
#50
0+
#55
1I
0E
b1100 !
b1100 @
0C
1+
#60
0<
14
0+
1*
b1 )
b1 6
b1111 (
b1111 ,
#65
1$
1W
1V
0H
0F
1`
1\
0^
1g
1f
0R
1B
b1 "
b1 A
b1 h
b1111 '
b1111 -
b1111 J
15
b1 &
b1 7
b1 K
0=
1%
1+
#70
0+
#75
0$
0W
0V
1H
0`
b1001 "
b1001 A
b1001 h
0g
1#
0I
0G
b1 !
b1 @
1C
b11 &
b11 7
b11 K
1;
05
b101 '
b101 -
b101 J
01
1:
00
04
1+
b11 )
b11 6
b101 (
b101 ,
#80
0+
#85
b1001 !
b1001 @
1I
0#
1+
